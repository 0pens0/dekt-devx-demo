clusters:
  view: # TAP view profile installed
    name: "openso-tap-view"
    provider: eks
    nodes: 4
  dev: # TAP interate profile installed
    name: "openso-tap-dev" 
    provider: eks 
    nodes: 5 
  stage: #TAP build profile installed
    name: "openso-tap-stage"
    provider: eks
    nodes: 5 
  prod: # TAP run profile installed
    name: "openso-tap-prod"
    provider: eks
    nodes: 3 
  brownfield: #for bronwfield apis demo, SCGW and TSM, no TAP installed
    name: "openso-tap-brownfield"
    provider: eks
    nodes: 3 

clouds:
  azureLocation: eastus
  azureResourceGroup: AKS
  azureNodeType: Standard_DS3_v2 # recommended: 4 vCPU, 14GB memory, 28GB temp disk 
  awsRegion: eu-central-1
  awsContainerdAMI: ami-06394026d060d43c3
  awsInstaceType: t3.xlarge # recommended: 4 vCPU, 16GB memory, 28GB temp disk 
  gcpRegion: 
  gcpProjectID: gke-cluster-with-tanzu
  gcpMachineType: e2-standard-4

private_registry:
  host: harbor.tanzuworld.com
  username: tap 
  password: Aa123456

repositories:
  buildservice: build-service
  system: "tap-system"
  dev: "tap-dev"
  stage: "tap-stage"

tanzu_network:
  username: "openso@vmware.com"
  password: "Aukjinjac1!"

tap:
  version: "1.3.0"
  carvelBundle: "cluster-essentials-bundle@sha256:54bf611711923dccd7c7f10603c846782b90644d48f1cb570b43a082d18e23b9"
  imageScanTemplate: carbonblack-private-image-scan-template #accepted values: carbonblack-private-image-scan-template snyk-private-image-scan-template, private-image-scan-template
  serviceBindingVersion: "0.8.0"

snyk: 
  version: "1.0.0-beta.4"
  token: MjhmYjViYzgtYTNhMC00MzYxLThiMjEtMzFmYzRkODM4YTll

carbonblack:
  version: "1.0.0-beta.2"
  cbc_api_id: "D5EZKAYQBB" 
  cbc_api_key: "DAYWQJYBIH7EGLWPWPJH5MMQ"
  cbc_org_key: "XYGTJ2Z3J"
  cbc_saas_url: "https://defense-test03.cbdtest.io/containers"

apps_namespaces:
  dev: "mydev"
  team: "myteam"
  stageProd: "myapps"

gitops:
  server: "https://github.com/"
  apiKey: "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"
  owner: "0pens0"
  dev: gitops-dev #repo needs to be created manually and clone at the same folder level as the demo repo
  stage: gitops-stage #repo needs to be created manually and clone at the same folder level as the demo repo

dns:
  domain: "openso.online"
  sysSubDomain: sys
  devSubDomain: dev 
  prodSubDomain: prod
  godaddyApiKey: "dLP8tHjgJTju_EYnoxdsVDnNax51sG8do9Z"
  godaddyApiSecret: "GXSnGGKoq4Ukdz3LLdLZRB"

data_services: #WIP
  tdsVersion:
  tanzuPostgresVersion:
  rdsProfile: #pre-configured named profile for an AWS account that has permissions to manage RDS databases

brownfield_apis: #optional, needed if you want to demo 'brownfield apis'
  scgwInstallDirectory:
  privateClusterContext: #setup this cluster (e.g. on vSphere) seperatly, and put the kubectl context name here


tmc:
  apiToken: "YeCIT7HqgLTXes7dBumLsuIoUnmEW8LBlq6lviI4xL_DNmF2qa32defenzn4oxhd"
  clusterGroup: tap