apiVersion: carto.run/v1alpha1
kind: ClusterSupplyChain
metadata:
  name: dekt-src-to-api-with-scan
spec:
  selector:
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: dekt-backend
  params:
  - name: maven_repository_url
    value: https://repo.maven.apache.org/maven2
  - default: main
    name: gitops_branch
  - default: supplychain
    name: gitops_user_name
  - default: supplychain
    name: gitops_user_email
  - default: supplychain@cluster.local
    name: gitops_commit_message
  - default: ""
    name: gitops_ssh_secret
  resources:
  - name: get-source
    params:
    - name: serviceAccount
      value: default
    - name: gitImplementation
      value: go-git
    templateRef:
      kind: ClusterSourceTemplate
      name: source-template
  - name: deliverable
    params:
    - name: registry
      value:
        ca_cert_data: ""
        repository: [CHANGE_ME]
        server: [CHANGE_ME]
    templateRef:
      kind: ClusterTemplate
      name: deliverable-template
  - name: test-source
    sources:
    - name: source
      resource: get-source
    templateRef:
      kind: ClusterSourceTemplate
      name: testing-pipeline
  - name: scan-source
    params:
    - default: scan-policy
      name: scanning_source_policy
    - default: blob-source-scan-template
      name: scanning_source_template
    sources:
    - name: source
      resource: test-source
    templateRef:
      kind: ClusterSourceTemplate
      name: source-scanner-template
  - name: build-image
    params:
    - name: serviceAccount
      value: default
    - name: registry
      value:
        ca_cert_data: ""
        repository: [CHANGE_ME]
        server: [CHANGE_ME]
    - default: default
      name: clusterBuilder
    - default: ./Dockerfile
      name: dockerfile
    - default: ./
      name: docker_build_context
    - default: []
      name: docker_build_extra_args
    sources:
    - name: source
      resource: scan-source
    templateRef:
      kind: ClusterImageTemplate
      options:
      - name: kpack-template
        selector:
          matchFields:
          - key: spec.params[?(@.name=="dockerfile")]
            operator: DoesNotExist
      - name: kaniko-template
        selector:
          matchFields:
          - key: spec.params[?(@.name=="dockerfile")]
            operator: Exists
  - name: scan-image
    images:
    - name: image
      resource: build-image
    params:
    - default: scan-policy
      name: scanning_image_policy
    - default: snyk-private-image-scan-template
    #- default: private-image-scan-template
      name: scanning_image_template
    templateRef:
      kind: ClusterImageTemplate
      name: image-scanner-template
  - name: apply-conventions
    images:
    - name: image
      resource: scan-image
    params:
    - name: serviceAccount
      value: default
    templateRef:
      kind: ClusterConfigTemplate
      name: convention-template
  - name: bind-services
    configs:
    - name: config
      resource: apply-conventions
    templateRef:
      kind: ClusterConfigTemplate
      name: config-template
  - name: process-apis
    configs:
    - name: app_def
      resource: bind-services
    templateRef:
      kind: ClusterConfigTemplate
      name: api-descriptors
  - name: deploy-app
    configs:
    - name: app_def
      resource: process-apis
    params:
    - name: serviceAccount
      value: default
    - name: registry
      value:
        ca_cert_data: ""
        repository: [CHANGE_ME]
        server: [CHANGE_ME]
    templateRef:
      kind: ClusterTemplate
      name: config-writer-template